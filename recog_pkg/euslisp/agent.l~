#!/usr/bin/env roseus
(ros::load-ros-manifest "roseus")
(ros::load-ros-manifest "jsk_recognition_msgs")

(defun setup (&optional (real nil))
  (load "package://hsreus/hsrb-interface.l")
  (hsrb-init)
  (setq *robot* *hsrb*)
  (objects (list *robot*))
  )

(defun move-to-spot (spot)
  (let (target)
    (when (null (send *tfl* :wait-for-transform "/map" spot (ros::time 0) 1))
      (return-from move-to-spot nil))
    (setq target (send *tfl* :lookup-transform "/map" spot (ros::time 0)))
    (when (null target)
      (return-from move-to-spot nil))
    (send *ri* :move-to target :frame-id "/map" :no-wait nil)))

(defun lookup-transform (from to &key
                              (stamp (ros::time 0)))
  (setq *tfl* (instance ros::transform-listener :init))
  (when (null (send *tfl* :wait-for-transform from to stamp 2))
    (return-from lookup-transform nil))
  (send *tfl* :lookup-transform from to stamp))

(defun draw (coord)
  (send (send coord :copy-worldcoords) :draw-on :flush t
        :size 100 :width 5 :color (float-vector 1 0 0 )))

(defun solve-ik (target &optional (real nil))
  (let (target-coords)
    (when (null target)
      (format t "cannot find target~%")
      (return-from solve-ik nil))
    (setq target-coords
          (send (make-coords :pos target)
                :rotate (deg2rad 90) :z))
    (send *irtviewer* :draw-objects)
    (when real
      (ir2ri 8000))
    ))

(defun start-grasp (&optional (real nil))
  (when real
    (send *ri* :start-grasp)
    (send *ri* :wait-interpolation)))

(defun stop-grasp (&optional (real nil))
  (when real
    (send *ri* :stop-grasp)
    (send *ri* :wait-interpolation)))

(defun ir2ri (&optional (time 10000))
  (send *ri* :angle-vector (send *robot* :angle-vector) time)
  (send *ri* :wait-interpolation))

(defun reset (&optional (real nil))
  (send *robot* :reset-pose)
  (when real
    (ir2ri 4000)))

(defun reset-go (&optional (real nil))
  (send *robot* :angle-vector (float-vector 0.0 0.0 9.99999 -0.153481 -89.9543 -89.9547 0.024563 -0.000336 0.0))
  (when real
    (ir2ri 4000)))

(ros::roseus "agent")
