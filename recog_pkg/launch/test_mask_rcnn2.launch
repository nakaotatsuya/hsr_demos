<launch>
  <arg name="gui" default="true" />
  <arg name="gpu" default="0" />
  <arg name="downsample" default="false"/>
  <arg name="input_cloud" default="/remote/head_rgbd_sensor/depth_registered/points" />
  <arg name="input_image" default="/remote/head_rgbd_sensor/rgb/image_rect_color" />
  <!-- <arg name="input_label" default="/mask_rcnn_instance_segmentation/output/label_cls" /> -->

  <arg name="nodelet_name" default="nodelet_manager" />
  <node name="nodelet_manager" pkg="nodelet" type="nodelet" args="manager" />
  <node name="mask_rcnn_instance_segmentation"
        pkg="jsk_perception" type="mask_rcnn_instance_segmentation.py" output="screen"
        clear_params="true">
    <remap from="~input" to="$(arg input_image)" />
    <rosparam command="load"
              file="/home/nakaotatsuya/train_data/20220106-013630/fg_class_names.yaml" />
    <rosparam subst_value="true">
      gpu: $(arg gpu)
      pretrained_model: /home/nakaotatsuya/train_data/20220106-013630/snapshot_model.npz
    </rosparam>
  </node>

  <!-- <node name="mask_rcnn_instance_segmentation" -->
  <!--       pkg="jsk_perception" type="mask_rcnn_instance_segmentation.py" output="screen" -->
  <!--       clear_params="true"> -->
  <!--   <remap from="~input" to="$(arg input_image)" /> -->
  <!--   <rosparam command="load" -->
  <!--             file="/home/nakaotatsuya/train_data/20211224-153632/fg_class_names.yaml" /> -->
  <!--   <rosparam subst_value="true"> -->
  <!--     gpu: $(arg gpu) -->
  <!--     pretrained_model: /home/nakaotatsuya/train_data/20211224-153632/snapshot_model.npz -->
  <!--   </rosparam> -->
  <!-- </node> -->
  <!-- <group if="$(arg gui)"> -->
  <!--   <node name="image_view" -->
  <!--         pkg="image_view" type="image_view" -->
  <!--         clear_params="true"> -->
  <!--     <remap from="image" to="mask_rcnn_73b2_kitchen/output/viz" /> -->
  <!--   </node> -->
  <!-- </group> -->

  <node name="multi_euclidean_clustering"
        pkg="nodelet" type="nodelet"
        args="standalone jsk_pcl/EuclideanClustering"
        output="screen"
        respawn="true" >
    <remap from="~input/cluster_indices" to="/mask_rcnn_instance_segmentation/output/cluster_indices" />
    <remap from="~input" to="$(arg input_cloud)" />
    <rosparam subst_value="true">
      tolerance: 0.02
      min_size: 15
      max_size: 1000
      approximate_sync: false
      downsample_enable: $(arg downsample)
      multi: true
      queue_size: 100
      cluster_filter: 0
    </rosparam>
  </node>

  <!-- <node name="multi_euclidean_cluster_point_indices_decomposer" -->
  <!--       pkg="nodelet" type="nodelet" -->
  <!--       args="standalone jsk_pcl/ClusterPointIndicesDecomposer"> -->
  <!--   <remap from="~input" to="$(arg input_cloud)" /> -->
  <!--   <remap from="~target" to="/multi_euclidean_clustering/output" /> -->
  <!--   <remap from="~align_planes" to="/organized_multi_plane_segmentation/output_refined_polygon" /> -->
  <!--   <remap from="~align_planes_coefficients" to="/organized_multi_plane_segmentation/output_refined_coefficients" /> -->
  <!--   <rosparam> -->
  <!--     align_boxes: true -->
  <!--     align_boxes_with_plane: true -->
  <!--     use_pca: true -->
  <!--     approximate_sync: true -->
  <!--     queue_size: 100 -->
  <!--     target_frame_id: base_link -->
  <!--     sort_by: z_axis -->
  <!--   </rosparam> -->
  <!-- </node> -->

  <node name="multi_euclidean_cluster_point_indices_decomposer"
        pkg="nodelet" type="nodelet"
        args="standalone jsk_pcl/ClusterPointIndicesDecomposer">
    <remap from="~input" to="$(arg input_cloud)" />
    <remap from="~target" to="/multi_euclidean_clustering/output" />
    <!-- <remap from="~align_planes" to="/organized_multi_plane_segmentation/output_refined_polygon" /> -->
    <!-- <remap from="~align_planes_coefficients" to="/organized_multi_plane_segmentation/output_refined_coefficients" /> -->
    <rosparam>
      align_boxes: true
      align_boxes_with_plane: true
      use_pca: true
      approximate_sync: true
      queue_size: 100
      target_frame_id: base_link
    </rosparam>
  </node>
</launch>
